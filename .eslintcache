[{"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Footer.js":"4","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Navbar.js":"5","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Main.js":"6","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\LandingPage.js":"7","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\Sidedrawer.js":"8","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\Backdrop.js":"9","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\reducers\\moviesReducer.js":"10","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\constants\\movieConstants.js":"11","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\actions\\moviesActions.js":"12","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\MovieItem.js":"13","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\MainImage.js":"14","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\SingleMovie.js":"15","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\FavoriteBtn.js":"16","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\Favorites.js":"17","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\actions\\favMoviesActions.js":"18","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\constants\\favMovieConstants.js":"19","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\reducers\\favMoviesReducer.js":"20","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\SearchBar.js":"21","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\material-ui\\theme.jsx":"22"},{"size":1251,"mtime":1611925427698,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":823,"mtime":1611222657890,"results":"26","hashOfConfig":"24"},{"size":721,"mtime":1611757743306,"results":"27","hashOfConfig":"24"},{"size":1552,"mtime":1612034709306,"results":"28","hashOfConfig":"24"},{"size":584,"mtime":1611239006160,"results":"29","hashOfConfig":"24"},{"size":3388,"mtime":1611930127354,"results":"30","hashOfConfig":"24"},{"size":856,"mtime":1612034579141,"results":"31","hashOfConfig":"24"},{"size":234,"mtime":1611078810820,"results":"32","hashOfConfig":"24"},{"size":857,"mtime":1612047315513,"results":"33","hashOfConfig":"24"},{"size":150,"mtime":1611409406574,"results":"34","hashOfConfig":"24"},{"size":521,"mtime":1611573946798,"results":"35","hashOfConfig":"24"},{"size":391,"mtime":1611152245101,"results":"36","hashOfConfig":"24"},{"size":621,"mtime":1611523095737,"results":"37","hashOfConfig":"24"},{"size":4167,"mtime":1611918285798,"results":"38","hashOfConfig":"24"},{"size":3294,"mtime":1611571256761,"results":"39","hashOfConfig":"24"},{"size":4060,"mtime":1611570479100,"results":"40","hashOfConfig":"24"},{"size":553,"mtime":1611409447622,"results":"41","hashOfConfig":"24"},{"size":146,"mtime":1611409455231,"results":"42","hashOfConfig":"24"},{"size":968,"mtime":1611410822600,"results":"43","hashOfConfig":"24"},{"size":3172,"mtime":1612047272968,"results":"44","hashOfConfig":"24"},{"size":715,"mtime":1611925425334,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"n005ww",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\index.js",[],["95","96"],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Footer.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Navbar.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\layouts\\Main.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\LandingPage.js",["97"],"import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport MainImage from '../components/MainImage'\r\nimport MovieItem from '../components/MovieItem'\r\n\r\nimport { getMovies, resetSingleMovie } from '../redux/actions/moviesActions'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport './LandingPage.css'\r\n\r\nconst LandingPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const movies = useSelector(state => state.movies.movies)\r\n    const movies_loaded = useSelector(state => state.movies.movies_loaded)\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    const [mainImage_index, setMainImage_index] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const path = `${process.env.REACT_APP_API_URL}movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\r\n        fetchMovies(path)\r\n    }, [])\r\n\r\n    const fetchMovies = (endpoint) => {\r\n\r\n        Axios.get(endpoint)\r\n            .then(response => {\r\n                let tempMovies = [...movies, ...response.data.results]\r\n                const originalMovies = [...new Map(tempMovies.map(item => [item['popularity'], item])).values()]\r\n                dispatch(getMovies(originalMovies))\r\n                setCurrentPage(response.data.page)\r\n            })\r\n        dispatch(resetSingleMovie())\r\n    }\r\n\r\n    const handleLoadMoreMovies = () => {\r\n        const path = `${process.env.REACT_APP_API_URL}movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=${currentPage + 1}`\r\n        fetchMovies(path)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movies_loaded) {\r\n            setMainImage_index(Math.floor(Math.random() * movies.length))\r\n        }\r\n\r\n    }, [movies_loaded, movies.length])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-image-cnt\">\r\n                {\r\n                    movies_loaded ? <MainImage\r\n                        image={`${process.env.REACT_APP_IMAGE_URL}w1280${movies[mainImage_index].backdrop_path}`}\r\n                        title={movies[mainImage_index].title}\r\n                        id={movies[mainImage_index].id}\r\n                    /> : null\r\n                }\r\n            </div>\r\n            <div className=\"landing-page\">\r\n                <h1>Popular movies</h1>\r\n                <div className=\"landing-page__movies\">\r\n                    {\r\n                        movies_loaded\r\n                            ?\r\n                            movies.map((item, key) => {\r\n                                return (\r\n                                    <MovieItem\r\n                                        key={key}\r\n                                        image={item.poster_path && `${process.env.REACT_APP_IMAGE_URL}w500${item.poster_path}`}\r\n                                        id={item.id}\r\n                                    />\r\n                                )\r\n                            })\r\n                            :\r\n                            <h2 style={{ textAlign: \"center\" }}>Loading...</h2>\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"landing-page__load-more\">\r\n                    <button\r\n                        onClick={() => handleLoadMoreMovies()}\r\n                    >\r\n                        Load more</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage\r\n","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\Sidedrawer.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\Backdrop.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\reducers\\moviesReducer.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\constants\\movieConstants.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\actions\\moviesActions.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\MovieItem.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\MainImage.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\SingleMovie.js",["98"],"import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport MainImage from '../components/MainImage'\r\nimport FavoriteBtn from '../components/FavoriteBtn'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getSingleMovie } from '../redux/actions/moviesActions'\r\n\r\nimport './SingleMovie.css'\r\n\r\nconst SingleMovie = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const singleMovieId = props.match.params.id\r\n\r\n    const [ratingColor, setRatingColor] = useState()\r\n\r\n    useEffect(() => {\r\n\r\n        Axios.get(`${process.env.REACT_APP_API_URL}movie/${singleMovieId}?api_key=${process.env.REACT_APP_API_KEY}`)\r\n            .then(response => response.data)\r\n            .then(movieItem => {\r\n                dispatch(getSingleMovie(movieItem))\r\n            }).catch(err =>\r\n                console.log(\"Failed getting single movie item\" + err)\r\n            )\r\n    }, [])\r\n\r\n    const singleMovie = useSelector(state => state.movies.singleMovie)\r\n    const singleMovie_loaded = useSelector(state => state.movies.singleMovie_loaded)\r\n\r\n    const {\r\n        adult,\r\n        title,\r\n        overview,\r\n        original_language,\r\n        poster_path,\r\n        release_date,\r\n        status,\r\n        vote_average,\r\n    } = singleMovie\r\n\r\n    useEffect(() => {\r\n        const getRatingColor = () => {\r\n            if (vote_average > 0 && vote_average <= 2.5) {\r\n                setRatingColor(\"#d6544b\")\r\n            }\r\n            else if (vote_average > 2.5 && vote_average <= 5) {\r\n                setRatingColor(\"#ffa929\")\r\n            }\r\n            else if (vote_average > 5 && vote_average <= 6.8) {\r\n                setRatingColor(\"#d4cd55\")\r\n            }\r\n            else if (vote_average > 6.8 && vote_average <= 10) {\r\n                setRatingColor(\"#3ed664\")\r\n            }\r\n        }\r\n        getRatingColor()\r\n    }, [singleMovie_loaded, vote_average])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                singleMovie_loaded ?\r\n                    <>\r\n                        <div className=\"single-movie__main-image\">\r\n                            <MainImage image={`${process.env.REACT_APP_IMAGE_URL}w1280${singleMovie.backdrop_path}`} />\r\n                        </div>\r\n                        <div className=\"single-movie\">\r\n                            <div className=\"single-movie__add-fav\">\r\n                                <h1>{title}</h1>\r\n                                <FavoriteBtn\r\n                                    movieId={singleMovieId}\r\n                                    movieInfo={singleMovie}\r\n                                    moviePoster={poster_path}\r\n                                />\r\n                            </div>\r\n                            <div className=\"single-movie__full-description\">\r\n                                <div className=\"full-description__img\">\r\n                                    <img src={`${process.env.REACT_APP_IMAGE_URL}w500${poster_path}`} alt=\"\" />\r\n                                </div>\r\n                                <div className=\"full-description__desc\">\r\n                                    <p><strong>Description: </strong>{overview}</p>\r\n                                    <p><strong>Original language: </strong>{original_language}</p>\r\n                                    <p><strong>Release date: </strong>{release_date}</p>\r\n                                    <p><strong>Status: </strong>{status}</p>\r\n                                    <div className=\"desc__avg-rating\"><p><strong>Average Rating: </strong><div style={{ backgroundColor: ratingColor }} className=\"avg-rating__icon\">{vote_average}</div></p></div>\r\n                                    <p><strong>Genre: </strong>{singleMovie.genres ? singleMovie.genres[0].name : 'no data... Sorry'}</p>\r\n                                    <p><strong>Age: </strong>{adult ? '18+' : 'below 18'}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                    :\r\n                    <div>Loading...</div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleMovie\r\n","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\FavoriteBtn.js",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addFavMovie, getFavMovies } from '../redux/actions/favMoviesActions'\r\n\r\n\r\nimport { BsFillHeartFill } from 'react-icons/bs'\r\n\r\n\r\nconst FavoriteBtn = ({ movieId, movieInfo, moviePoster }) => {\r\n\r\n    const favMovies = useSelector(state => state.favMovies.favMovies)\r\n    const favMovies_loaded = useSelector(state => state.favMovies.favMovies_loaded)\r\n\r\n    const [inFavorite, setInFavorite] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const movieData = {\r\n        movieId: movieId,\r\n        movieTitle: movieInfo.title,\r\n        movieImage: movieInfo.backdrop_path,\r\n        moviePoster: moviePoster,\r\n        MovieRunTime: movieInfo.runtime,\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/movie/getFavMovies')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    dispatch(getFavMovies(response.data))\r\n                } else {\r\n                    console.log('Failed getting favMovies')\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (favMovies_loaded) {\r\n            if (inFavorite) {\r\n                Axios.post('http://localhost:3001/api/movie/addFavMovie',\r\n                    {\r\n                        movieId: movieData.movieId,\r\n                        movieTitle: movieData.movieTitle,\r\n                        movieImage: movieData.movieImage,\r\n                        moviePoster: movieData.moviePoster,\r\n                        MovieRunTime: movieData.MovieRunTime\r\n                    }\r\n                ).then((response) => {\r\n\r\n                    const favMovieItem = {\r\n                        _id: response.data._id,\r\n                        movieId: movieData.movieId,\r\n                        movieTitle: movieData.movieTitle,\r\n                        movieImage: movieData.movieImage,\r\n                        moviePoster: movieData.moviePoster,\r\n                        MovieRunTime: movieData.MovieRunTime\r\n                    }\r\n\r\n                    dispatch(addFavMovie(favMovieItem))\r\n                }).catch(() => {\r\n                    alert('it did not worked')\r\n                })\r\n            }\r\n        }\r\n    }, [inFavorite])\r\n\r\n\r\n    const displayButton = () => {\r\n\r\n        let isInFav = favMovies.find(item => item.movieId === movieId) ? true : false\r\n\r\n        if (!isInFav) {\r\n            return (\r\n                <>\r\n                    <button\r\n                        onClick={() => setInFavorite(prevState => !prevState)}\r\n                    >Add to Favorite <BsFillHeartFill className=\"add-fav__btn\" /></button>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <Link to=\"/favorites\">\r\n                        <button\r\n                        >\r\n\r\n                            Already in Favorites <BsFillHeartFill className=\"add-fav__btn\" />\r\n\r\n                        </button>\r\n                    </Link>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        displayButton()\r\n    )\r\n}\r\n\r\nexport default FavoriteBtn\r\n","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\pages\\Favorites.js",["101","102"],"import React, { useEffect } from 'react';\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Axios from 'axios'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getFavMovies, updateFavMovies } from '../redux/actions/favMoviesActions'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport './Favorites.css'\r\n\r\nconst Favorites = () => {\r\n\r\n    const favMovies = useSelector(state => state.favMovies.favMovies)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:3001/api/movie/getFavMovies')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    dispatch(getFavMovies(response.data))\r\n                } else {\r\n                    console.log('Failed getting favMovies')\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const handleDeleteFavMovie = (id) => {\r\n        Axios.delete(`http://localhost:3001/api/favorite/delete/${id}`)\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    dispatch(updateFavMovies(response.data))\r\n                }\r\n                else {\r\n                    console.log('Failed deleting item')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"favorites\">\r\n            <div className=\"favorites__content\">\r\n                {favMovies.length > 0 ?\r\n                    <TableContainer className=\"content__table-cnt\" component={Paper}>\r\n                        <Table className=\"content__table\" aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow className=\"content__table-row\">\r\n                                    <TableCell><p>Movie Name</p></TableCell>\r\n                                    <TableCell align=\"right\"><p>Poster</p></TableCell>\r\n                                    <TableCell align=\"right\"><p>Action</p></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {favMovies.map((item) => (\r\n                                    <TableRow key={item._id}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            <Link exact to={`/movie/${item.movieId}`}>{item.movieTitle}</Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <img\r\n                                                className=\"favMovie-table-img\"\r\n                                                src={`${process.env.REACT_APP_IMAGE_URL}w500${item.moviePoster}`}\r\n                                                alt={item.movieTitle}\r\n                                            ></img>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <button\r\n                                                className=\"table__button-del\"\r\n                                                onClick={() => handleDeleteFavMovie(item.movieId)}>Unfavorite</button></TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    :\r\n                    <h2 style={{ textAlign: 'center' }}>You don't have any movies in favorites yet!</h2>\r\n\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Favorites\r\n","C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\actions\\favMoviesActions.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\constants\\favMovieConstants.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\redux\\reducers\\favMoviesReducer.js",[],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\components\\SearchBar.js",["103"],"C:\\Users\\admin\\Desktop\\WORKSPACE ALL\\KK - MERN\\mern-movies-app\\src\\material-ui\\theme.jsx",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":8,"nodeType":"110","endLine":26,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":30,"column":8,"nodeType":"110","endLine":30,"endColumn":10,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":38,"column":8,"nodeType":"110","endLine":38,"endColumn":10,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":68,"column":8,"nodeType":"110","endLine":68,"endColumn":20,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":11,"column":10,"nodeType":"120","messageId":"121","endLine":11,"endColumn":20},{"ruleId":"108","severity":1,"message":"114","line":37,"column":8,"nodeType":"110","endLine":37,"endColumn":10,"suggestions":"122"},{"ruleId":"108","severity":1,"message":"123","line":75,"column":8,"nodeType":"110","endLine":75,"endColumn":21,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'dispatch' and 'singleMovieId'. Either include them or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has missing dependencies: 'dispatch', 'favMovies_loaded', 'movieData.MovieRunTime', 'movieData.movieId', 'movieData.movieImage', 'movieData.moviePoster', and 'movieData.movieTitle'. Either include them or remove the dependency array.",["130"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar",["131"],"React Hook useEffect has a missing dependency: 'getMovie'. Either include it or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"137","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [fetchMovies]",{"range":"144","text":"145"},"Update the dependencies array to be: [dispatch, singleMovieId]",{"range":"146","text":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},"Update the dependencies array to be: [dispatch, favMovies_loaded, inFavorite, movieData.MovieRunTime, movieData.movieId, movieData.movieImage, movieData.moviePoster, movieData.movieTitle]",{"range":"150","text":"151"},{"range":"152","text":"149"},"Update the dependencies array to be: [getMovie, movieOption]",{"range":"153","text":"154"},[868,870],"[fetchMovies]",[919,921],"[dispatch, singleMovieId]",[1219,1221],"[dispatch]",[2374,2386],"[dispatch, favMovies_loaded, inFavorite, movieData.MovieRunTime, movieData.movieId, movieData.movieImage, movieData.moviePoster, movieData.movieTitle]",[1217,1219],[2130,2143],"[getMovie, movieOption]"]